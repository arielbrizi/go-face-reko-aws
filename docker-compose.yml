version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  broker: #Kafka
    image: confluentinc/cp-kafka:5.5.0
    container_name: broker
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "images:1:1"
  app:
    image: golang:1.14.3
    depends_on:
      - broker
    volumes:
        - .:/go/src/go-intelligent-monitoring-system
        - /home/:/home/
    working_dir: /go/src/go-intelligent-monitoring-system
    command: go run main.go
    environment:
        ## General Variables
        - TZ=America/Argentina/Buenos_Aires
        - AWS_ACCESS_KEY_ID=AKIAJ6U5KYXPRQYW7N7A
        - AWS_SECRET_ACCESS_KEY=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
        - FTP_DIRECTORY=/home/ariel/fotos_pasillo/
        - CAMARA_DOMAIN=camarasilvia # In case of S3 it's used to define the "bucket" name
        - QUEUE_TOPIC=images
        - QUEUE_BROKER_LIST=broker:9092 #abc.com/kafka1/:80,abc.com/kafka2/:80,abc.com/kafka3/:80
        - SNS_TOPIC=arn:aws:sns:us-east-1:491728392546:monitoringSystem-eMail
        - AUTHORIZED_FACES_DIRECTORY=/home/ariel/fotos_pasillo/authorized_faces/
        ## AWS variables
        - AWS_S3_BUCKET_POLICY={"Version":"2012-10-17","Statement":[{"Sid":"PublicRead","Effect":"Allow","Principal":"*","Action":["s3:GetObject","s3:GetObjectVersion"],"Resource":"arn:aws:s3:::camarasilvia/*"}]} ## Where camarasilvia must be same as CAMARA_DOMAIN variable
        

